#!/bin/bash
# Re-merge branches
#
#  Copyright (C) 2014 LoVullo Associates, Inc.
#
#  This file is part of git-remerge.
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# enter a known directory to simplify sourcing
declare -r cwd="$(pwd)"
declare -r gitdir="$cwd/$( git rev-parse --git-dir )"
cd "$( dirname "$0" )/../src" || {
  echo 'error: failed to enter src directory' >&2
  exit 1
}

# to hold command-line options
declare -A cmdopts=()

source cmdline.sh 0.1.0
source util.sh
source git.sh "$gitdir"

# initialized; return to original working directory so as not to confuse git
cd "$cwd"


##
# Entry point
#
main()
{
  local -r ref="$1" since="$2"

  list-merged-of "$ref" "$since" \
    | grep -v "^$ref\b" \
    | {
      if [ -n "${cmdopts[dryrun]}" ]; then
        sed 's/$/ skipped/'
      else
        for-each merge-commit
      fi
    }
}

cmdline cmdopts main "$@"
